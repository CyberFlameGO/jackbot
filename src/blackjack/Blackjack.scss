@import 'global';

.Blackjack {
  @include position(absolute, null 0 0 0);
  background: linear-gradient(to bottom, transparent, rgba($black, .2));
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
  width: 100%;

  @include max-width(tablet-sm) {
    position: static;
    background: rgba($black, .9);
  }

  .dealer, .player {
    min-width: 100%;
    overflow: hidden;
    margin-top: 20px;
  } 

  .player { margin: 0; }

  h3 {
    @include all-caps;
    font-size: 18px;
    line-height: 20px;
    margin-bottom: 5px;
    color: $white;

    span {
      font-size: .7em;
      color: $black;
      display: inline;
      padding-left: 5px;
    }
  }

  .cards {
    padding: 0;
    position: relative;
  }

  .scene {
    @include size(20px, 35px);
    perspective: 200px;
    float: left;
    margin: 0 5px 0 0;
    padding: 0;
    list-style-type: none;

    @include min-width(tablet) {
      @include size(50px, 80px);
      margin-right: 15px;
    }
  }

  @keyframes flip {
    0% {
      transform: rotateY(180deg);
    } 

    100% {
      transform: rotateY(0deg);
    }
  }

  .card {
    @include size(100%);
    position: relative;
    transform-style: preserve-3d;
    transform: rotateY(180deg);
    overflow: visible;

    &.visible {
      animation: flip .3s linear;
      animation-fill-mode: forwards;
    }

    div {
      @include size(100%);
      position: absolute;
      backface-visibility: hidden;
      border-radius: 4px;
      display: flex;
      align-items: flex-end;
      justify-content: space-evenly;

      @include min-width(tablet) {
        border-radius: 8px;
        align-items: center;
        justify-content: center;
      }
    }

    .front {
      background: $white;
    }

    .back {
      background: radial-gradient($pink, lighten($black, 30%));
      transform: rotateY(180deg);
    }

    .front {
      @include all-caps;
      font-size: 17px;
      margin: 0;
    }
  }

  @for $i from 1 through 5 {
    .scene .card:nth-child($i) {
      animation-delay: $i * .1s;
    }
  }
}